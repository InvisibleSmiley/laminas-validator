<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.11.0@c9b192ab8400fdaf04b2b13d110575adc879aa90">
  <file src="bin/update_hostname_validator.php">
    <MissingClosureParamType>
      <code>$domain</code>
      <code>$encode</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code>function ($encode) use ($hostnameValidator, $decodePunyCode) {</code>
    </MissingClosureReturnType>
    <MixedArgument>
      <code>$decodePunycode(strtolower($line))</code>
      <code>$domain</code>
      <code>$encode</code>
      <code>$encode</code>
    </MixedArgument>
  </file>
  <file src="src/AbstractValidator.php">
    <LessSpecificReturnStatement>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </LessSpecificReturnStatement>
    <MixedArgumentTypeCoercion>
      <code>$value</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$this->{key($property)}[current($property)]]]></code>
      <code><![CDATA[$this->{key($result)}[current($result)]]]></code>
      <code><![CDATA[$this->{key($result)}[current($result)]]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$this->abstractOptions['messages'][$messageKey]]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$this->{key($property)}[current($property)]]]></code>
      <code><![CDATA[$this->{key($result)}[current($result)]]]></code>
      <code><![CDATA[$this->{key($result)}[current($result)]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$property</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->abstractOptions]]></code>
    </MixedPropertyTypeCoercion>
    <PossiblyUnusedParam>
      <code>$messageKey</code>
    </PossiblyUnusedParam>
    <UndefinedThisPropertyAssignment>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
    </UndefinedThisPropertyAssignment>
  </file>
  <file src="src/Barcode.php">
    <DocblockTypeContradiction>
      <code>$options instanceof Traversable</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$options['options']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$options['options']]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$length</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>Barcode\AbstractAdapter</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>new $adapter($options)</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$length</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['adapter']]]></code>
      <code><![CDATA[$this->options['adapter']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>getChecksum</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Barcode/AbstractAdapter.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$length === 'even']]></code>
      <code><![CDATA[$length === 'even']]></code>
      <code><![CDATA[$length === 'odd']]></code>
      <code><![CDATA[$length === 'odd']]></code>
      <code>is_string($value)</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code>$barcode[$i]</code>
      <code>$barcode[$i]</code>
      <code>$barcode[$length - $i]</code>
      <code>$barcode[$length - $i]</code>
      <code>$barcode[$length - $i]</code>
      <code>$barcode[$length - $i]</code>
      <code>$row</code>
    </InvalidOperand>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>AbstractAdapter|bool</code>
      <code>bool</code>
      <code>int|array</code>
      <code>int|string|array</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->$checksum($value)]]></code>
      <code><![CDATA[$this->options['characters']]]></code>
      <code><![CDATA[$this->options['checksum']]]></code>
      <code><![CDATA[$this->options['length']]]></code>
      <code><![CDATA[$this->options['useChecksum']]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code>$characters</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$characters</code>
    </PossiblyInvalidCast>
    <PossiblyUnusedMethod>
      <code>code25</code>
      <code>gtin</code>
      <code>identcode</code>
      <code>postnet</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(bool) $check</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Barcode/Codabar.php">
    <InvalidArgument>
      <code><![CDATA['0123456789-$:/.+']]></code>
      <code><![CDATA['0123456789-$:/.+ABCDTN*E']]></code>
    </InvalidArgument>
    <PossiblyInvalidArgument>
      <code>$chars</code>
    </PossiblyInvalidArgument>
    <UnusedClass>
      <code>Codabar</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Code128.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! $this->utf8StringWrapper]]></code>
      <code><![CDATA[$this->utf8StringWrapper]]></code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[[
            'A' => [
                0   => ' ',
                1   => '!',
                2   => '"',
                3   => '#',
                4   => '$',
                5   => '%',
                6   => '&',
                7   => "'",
                8   => '(',
                9   => ')',
                10  => '*',
                11  => '+',
                12  => ',',
                13  => '-',
                14  => '.',
                15  => '/',
                16  => '0',
                17  => '1',
                18  => '2',
                19  => '3',
                20  => '4',
                21  => '5',
                22  => '6',
                23  => '7',
                24  => '8',
                25  => '9',
                26  => ':',
                27  => ';',
                28  => '<',
                29  => '=',
                30  => '>',
                31  => '?',
                32  => '@',
                33  => 'A',
                34  => 'B',
                35  => 'C',
                36  => 'D',
                37  => 'E',
                38  => 'F',
                39  => 'G',
                40  => 'H',
                41  => 'I',
                42  => 'J',
                43  => 'K',
                44  => 'L',
                45  => 'M',
                46  => 'N',
                47  => 'O',
                48  => 'P',
                49  => 'Q',
                50  => 'R',
                51  => 'S',
                52  => 'T',
                53  => 'U',
                54  => 'V',
                55  => 'W',
                56  => 'X',
                57  => 'Y',
                58  => 'Z',
                59  => '[',
                60  => '\\',
                61  => ']',
                62  => '^',
                63  => '_',
                64  => 0x00,
                65  => 0x01,
                66  => 0x02,
                67  => 0x03,
                68  => 0x04,
                69  => 0x05,
                70  => 0x06,
                71  => 0x07,
                72  => 0x08,
                73  => 0x09,
                74  => 0x0A,
                75  => 0x0B,
                76  => 0x0C,
                77  => 0x0D,
                78  => 0x0E,
                79  => 0x0F,
                80  => 0x10,
                81  => 0x11,
                82  => 0x12,
                83  => 0x13,
                84  => 0x14,
                85  => 0x15,
                86  => 0x16,
                87  => 0x17,
                88  => 0x18,
                89  => 0x19,
                90  => 0x1A,
                91  => 0x1B,
                92  => 0x1C,
                93  => 0x1D,
                94  => 0x1E,
                95  => 0x1F,
                96  => 'Ç',
                97  => 'ü',
                98  => 'é',
                99  => 'â',
                100 => 'ä',
                101 => 'à',
                102 => 'å',
                103 => '‡',
                104 => 'ˆ',
                105 => '‰',
                106 => 'Š',
            ],
            'B' => [
                0   => ' ',
                1   => '!',
                2   => '"',
                3   => '#',
                4   => '$',
                5   => '%',
                6   => '&',
                7   => "'",
                8   => '(',
                9   => ')',
                10  => '*',
                11  => '+',
                12  => ',',
                13  => '-',
                14  => '.',
                15  => '/',
                16  => '0',
                17  => '1',
                18  => '2',
                19  => '3',
                20  => '4',
                21  => '5',
                22  => '6',
                23  => '7',
                24  => '8',
                25  => '9',
                26  => ':',
                27  => ';',
                28  => '<',
                29  => '=',
                30  => '>',
                31  => '?',
                32  => '@',
                33  => 'A',
                34  => 'B',
                35  => 'C',
                36  => 'D',
                37  => 'E',
                38  => 'F',
                39  => 'G',
                40  => 'H',
                41  => 'I',
                42  => 'J',
                43  => 'K',
                44  => 'L',
                45  => 'M',
                46  => 'N',
                47  => 'O',
                48  => 'P',
                49  => 'Q',
                50  => 'R',
                51  => 'S',
                52  => 'T',
                53  => 'U',
                54  => 'V',
                55  => 'W',
                56  => 'X',
                57  => 'Y',
                58  => 'Z',
                59  => '[',
                60  => '\\',
                61  => ']',
                62  => '^',
                63  => '_',
                64  => '`',
                65  => 'a',
                66  => 'b',
                67  => 'c',
                68  => 'd',
                69  => 'e',
                70  => 'f',
                71  => 'g',
                72  => 'h',
                73  => 'i',
                74  => 'j',
                75  => 'k',
                76  => 'l',
                77  => 'm',
                78  => 'n',
                79  => 'o',
                80  => 'p',
                81  => 'q',
                82  => 'r',
                83  => 's',
                84  => 't',
                85  => 'u',
                86  => 'v',
                87  => 'w',
                88  => 'x',
                89  => 'y',
                90  => 'z',
                91  => '{',
                92  => '|',
                93  => '}',
                94  => '~',
                95  => 0x7F,
                96  => 'Ç',
                97  => 'ü',
                98  => 'é',
                99  => 'â',
                100 => 'ä',
                101 => 'à',
                102 => 'å',
                103 => '‡',
                104 => 'ˆ',
                105 => '‰',
                106 => 'Š',
            ],
            'C' => [
                0   => '00',
                1   => '01',
                2   => '02',
                3   => '03',
                4   => '04',
                5   => '05',
                6   => '06',
                7   => '07',
                8   => '08',
                9   => '09',
                10  => '10',
                11  => '11',
                12  => '12',
                13  => '13',
                14  => '14',
                15  => '15',
                16  => '16',
                17  => '17',
                18  => '18',
                19  => '19',
                20  => '20',
                21  => '21',
                22  => '22',
                23  => '23',
                24  => '24',
                25  => '25',
                26  => '26',
                27  => '27',
                28  => '28',
                29  => '29',
                30  => '30',
                31  => '31',
                32  => '32',
                33  => '33',
                34  => '34',
                35  => '35',
                36  => '36',
                37  => '37',
                38  => '38',
                39  => '39',
                40  => '40',
                41  => '41',
                42  => '42',
                43  => '43',
                44  => '44',
                45  => '45',
                46  => '46',
                47  => '47',
                48  => '48',
                49  => '49',
                50  => '50',
                51  => '51',
                52  => '52',
                53  => '53',
                54  => '54',
                55  => '55',
                56  => '56',
                57  => '57',
                58  => '58',
                59  => '59',
                60  => '60',
                61  => '61',
                62  => '62',
                63  => '63',
                64  => '64',
                65  => '65',
                66  => '66',
                67  => '67',
                68  => '68',
                69  => '69',
                70  => '70',
                71  => '71',
                72  => '72',
                73  => '73',
                74  => '74',
                75  => '75',
                76  => '76',
                77  => '77',
                78  => '78',
                79  => '79',
                80  => '80',
                81  => '81',
                82  => '82',
                83  => '83',
                84  => '84',
                85  => '85',
                86  => '86',
                87  => '87',
                88  => '88',
                89  => '89',
                90  => '90',
                91  => '91',
                92  => '92',
                93  => '93',
                94  => '94',
                95  => '95',
                96  => '96',
                97  => '97',
                98  => '98',
                99  => '99',
                100 => 'ä',
                101 => 'à',
                102 => 'å',
                103 => '‡',
                104 => 'ˆ',
                105 => '‰',
                106 => 'Š',
            ],
        ]]]></code>
    </InvalidArgument>
    <PossiblyFalseArgument>
      <code>$char</code>
      <code>$char</code>
      <code>$char</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </PossiblyFalseArgument>
    <PropertyNotSetInConstructor>
      <code>$utf8StringWrapper</code>
    </PropertyNotSetInConstructor>
    <UndefinedFunction>
      <code><![CDATA['code128']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Code128</code>
    </UnusedClass>
    <UnusedVariable>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
      <code>$read</code>
    </UnusedVariable>
  </file>
  <file src="src/Barcode/Code25.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['code25']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Code25</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Code25interleaved.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
      <code><![CDATA['even']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['code25']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Code25interleaved</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Code39.php">
    <InvalidArgument>
      <code><![CDATA['0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ -.$/+%']]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code>$count</code>
      <code>$mod</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$count</code>
      <code><![CDATA[$this->check[$char]]]></code>
    </MixedOperand>
    <UndefinedFunction>
      <code><![CDATA['code39']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Code39</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Code39ext.php">
    <UnusedClass>
      <code>Code39ext</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Code93.php">
    <InvalidArgument>
      <code><![CDATA['0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ -.$/+%']]></code>
    </InvalidArgument>
    <MixedAssignment>
      <code>$count</code>
      <code>$count</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$count</code>
      <code>$count</code>
      <code><![CDATA[$this->check[$char]]]></code>
      <code><![CDATA[$this->check[$char]]]></code>
      <code><![CDATA[$this->check[$char] * $length]]></code>
      <code><![CDATA[$this->check[$char] * $length]]></code>
    </MixedOperand>
    <PossiblyFalseOperand>
      <code>$check</code>
      <code><![CDATA[array_search($count % 47, $this->check)]]></code>
    </PossiblyFalseOperand>
    <UndefinedFunction>
      <code><![CDATA['code93']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Code93</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Code93ext.php">
    <UnusedClass>
      <code>Code93ext</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Ean12.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Ean12</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Ean13.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <PossiblyUnusedMethod>
      <code>__construct</code>
    </PossiblyUnusedMethod>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
  </file>
  <file src="src/Barcode/Ean14.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Ean14</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Ean18.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Ean18</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Ean2.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UnusedClass>
      <code>Ean2</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Ean5.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UnusedClass>
      <code>Ean5</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Ean8.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Ean8</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Gtin12.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Gtin12</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Gtin13.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Gtin13</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Gtin14.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Gtin14</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Identcode.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['identcode']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Identcode</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Intelligentmail.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UnusedClass>
      <code>Intelligentmail</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Issn.php">
    <InvalidArgument>
      <code><![CDATA['0123456789X']]></code>
    </InvalidArgument>
    <PossiblyInvalidOperand>
      <code>$token</code>
    </PossiblyInvalidOperand>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
      <code><![CDATA['gtin']]></code>
      <code><![CDATA['issn']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Issn</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Itf14.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Itf14</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Leitcode.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['identcode']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Leitcode</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Planet.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['postnet']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Planet</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Postnet.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['postnet']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Postnet</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Royalmail.php">
    <InvalidArgument>
      <code><![CDATA['0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['royalmail']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Royalmail</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Sscc.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Sscc</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Upca.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Upca</code>
    </UnusedClass>
  </file>
  <file src="src/Barcode/Upce.php">
    <InvalidArgument>
      <code><![CDATA['0123456789']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['gtin']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>Upce</code>
    </UnusedClass>
  </file>
  <file src="src/Between.php">
    <MixedInferredReturnType>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['inclusive']]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code>setInclusive</code>
      <code>setMax</code>
      <code>setMin</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Bitwise.php">
    <DocblockTypeContradiction>
      <code><![CDATA[self::OP_AND === $this->operator]]></code>
      <code><![CDATA[self::OP_AND === $this->operator]]></code>
      <code><![CDATA[self::OP_XOR === $this->operator]]></code>
      <code><![CDATA[self::OP_XOR === $this->operator]]></code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue>
      <code>$operator</code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment>
      <code><![CDATA[$temp['control']]]></code>
      <code><![CDATA[$temp['operator']]]></code>
      <code><![CDATA[$temp['strict']]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedOperand>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor>
      <code>$control</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $strict</code>
      <code>(int) $control</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Callback.php">
    <MixedArgument>
      <code>$options</code>
      <code>$options</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$args[]</code>
      <code>$args[]</code>
      <code>$callback</code>
      <code>$options</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>call_user_func_array($callback, $args)</code>
    </MixedFunctionCall>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/CreditCard.php">
    <DocblockTypeContradiction>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code>$value[$i]</code>
    </InvalidOperand>
    <MixedArgument>
      <code><![CDATA[$options['service']]]></code>
      <code><![CDATA[$options['type']]]></code>
      <code><![CDATA[$this->cardLength[$type]]]></code>
      <code><![CDATA[$this->options['type']]]></code>
      <code><![CDATA[$this->options['type']]]></code>
      <code>$typ</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArrayAssignment>
      <code><![CDATA[$this->options['type'][]]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$this->cardLength[$type]]]></code>
      <code><![CDATA[$this->cardType[$type]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$prefix</code>
      <code><![CDATA[$temp['service']]]></code>
      <code><![CDATA[$temp['type']]]></code>
      <code>$typ</code>
      <code>$type</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
      <code>callable</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['service']]]></code>
      <code><![CDATA[$this->options['type']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
      <code><![CDATA[$this->getType()]]></code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedReturnValue>
      <code>CreditCard</code>
    </PossiblyUnusedReturnValue>
    <UndefinedAttributeClass>
      <code>SensitiveParameter</code>
    </UndefinedAttributeClass>
  </file>
  <file src="src/Csrf.php">
    <DocblockTypeContradiction>
      <code>is_array($options)</code>
      <code>is_string($value)</code>
      <code><![CDATA[null === $this->session]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$key</code>
      <code><![CDATA[$session->tokenList[$tokenId]]]></code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment>
      <code><![CDATA[$session->tokenList[$tokenId]]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$key</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>null|string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$session->hash]]></code>
      <code><![CDATA[$this->hash]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$session->tokenList]]></code>
    </PossiblyNullArrayOffset>
    <PropertyNotSetInConstructor>
      <code>$session</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(int) $ttl</code>
      <code>(string) $name</code>
      <code>(string) $salt</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Date.php">
    <MixedArgumentTypeCoercion>
      <code>$value</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$temp['format']]]></code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="src/DateStep.php">
    <ArgumentTypeCoercion>
      <code>$intervalParts</code>
    </ArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$temp['baseValue']]]></code>
      <code><![CDATA[$temp['format']]]></code>
      <code><![CDATA[$temp['step']]]></code>
      <code><![CDATA[$temp['timezone']]]></code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUnusedMethod>
      <code>setStep</code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code>$step</code>
      <code>$timezone</code>
    </PropertyNotSetInConstructor>
    <TypeDoesNotContainType>
      <code>$baseDate instanceof DateTimeImmutable</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Db/AbstractDb.php">
    <LessSpecificReturnStatement>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$options['adapter']]]></code>
      <code><![CDATA[$options['exclude']]]></code>
      <code><![CDATA[$options['field']]]></code>
      <code><![CDATA[$options['schema']]]></code>
      <code><![CDATA[$options['table']]]></code>
      <code><![CDATA[$this->exclude]]></code>
      <code><![CDATA[$this->exclude['field']]]></code>
      <code><![CDATA[$this->exclude['value']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$firstArgument</code>
      <code><![CDATA[$temp['adapter']]]></code>
      <code><![CDATA[$temp['exclude']]]></code>
      <code><![CDATA[$temp['field']]]></code>
      <code><![CDATA[$temp['table']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
      <code>string|array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$result->current()]]></code>
      <code><![CDATA[$this->exclude]]></code>
    </MixedReturnStatement>
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyNullArgument>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code><![CDATA[$options['adapter']]]></code>
      <code><![CDATA[$options['exclude']]]></code>
      <code><![CDATA[$options['field']]]></code>
      <code><![CDATA[$options['schema']]]></code>
      <code><![CDATA[$options['table']]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
      <code>null</code>
      <code>null</code>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>$parameters</code>
    </PossiblyNullReference>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedMethod>
      <code>getExclude</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code>self</code>
    </PossiblyUnusedReturnValue>
    <PropertyNotSetInConstructor>
      <code>$schema</code>
      <code>AbstractDb</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(string) $field</code>
      <code>(string) $table</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->select instanceof Select]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Db/NoRecordExists.php">
    <DocblockTypeContradiction>
      <code><![CDATA[null === $this->adapter]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <PropertyNotSetInConstructor>
      <code>NoRecordExists</code>
      <code>NoRecordExists</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Db/RecordExists.php">
    <DocblockTypeContradiction>
      <code><![CDATA[null === $this->adapter]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <PropertyNotSetInConstructor>
      <code>RecordExists</code>
      <code>RecordExists</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Digits.php">
    <DocblockTypeContradiction>
      <code>! is_string($value)</code>
      <code>null === static::$filter</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/EmailAddress.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$this->getAllow()]]></code>
    </InvalidArgument>
    <LessSpecificImplementedReturnType>
      <code>AbstractValidator</code>
    </LessSpecificImplementedReturnType>
    <MixedArgument>
      <code><![CDATA[$this->getValue()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$hostname</code>
      <code>$mxHosts</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment>
      <code><![CDATA[$this->abstractOptions['messages'][$code]]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code><![CDATA[$temp['allow']]]></code>
      <code><![CDATA[$temp['hostnameValidator']]]></code>
      <code><![CDATA[$temp['useMxCheck']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>Hostname</code>
      <code>bool</code>
      <code>bool</code>
      <code>bool</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>setAllow</code>
    </MixedMethodCall>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$this->abstractOptions]]></code>
    </MixedPropertyTypeCoercion>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['allow']]]></code>
      <code><![CDATA[$this->options['hostnameValidator']]]></code>
      <code><![CDATA[$this->options['hostnameValidator']]]></code>
      <code><![CDATA[$this->options['useDeepMxCheck']]]></code>
      <code><![CDATA[$this->options['useDomainCheck']]]></code>
      <code><![CDATA[$this->options['useMxCheck']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedMethod>
      <code>idnToUtf8</code>
      <code>setAllow</code>
      <code>useDeepMxCheck</code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code>$hostname</code>
      <code>$localPart</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $deep</code>
      <code>(bool) $domain</code>
      <code>(bool) $mx</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>array_combine($mxHosts, $weight)</code>
      <code>is_string($value)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[false === UConverter::transcode($localPart, 'UTF-8', 'UTF-8')]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Exception/BadMethodCallException.php">
    <UnusedClass>
      <code>BadMethodCallException</code>
    </UnusedClass>
  </file>
  <file src="src/Exception/ExtensionNotLoadedException.php">
    <UnusedClass>
      <code>ExtensionNotLoadedException</code>
    </UnusedClass>
  </file>
  <file src="src/Explode.php">
    <DocblockTypeContradiction>
      <code>[$value]</code>
    </DocblockTypeContradiction>
    <MixedArrayAssignment>
      <code><![CDATA[$this->abstractOptions['messages'][]]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code>setBreakOnFirstFailure</code>
      <code>setValueDelimiter</code>
    </PossiblyUnusedMethod>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->abstractOptions]]></code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(bool) $break</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>null !== $delimiter</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments>
      <code>isValid</code>
    </TooManyArguments>
  </file>
  <file src="src/File/Count.php">
    <DocblockTypeContradiction>
      <code>is_array($file)</code>
      <code>is_string($options)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$file</code>
      <code>$file</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$file</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$file['name']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[$this->files[$name]]]></code>
      <code><![CDATA[$this->files[$name]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$max</code>
      <code>$min</code>
      <code>$name</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>int</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code><![CDATA[$file['destination']]]></code>
      <code><![CDATA[$file['name']]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['max']]]></code>
      <code><![CDATA[$this->options['min']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$file</code>
      <code>$file</code>
      <code>$value</code>
    </PossiblyInvalidCast>
    <PropertyNotSetInConstructor>
      <code>$count</code>
      <code>$files</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code>$file !== null</code>
      <code><![CDATA[$this->getMax() !== null]]></code>
      <code><![CDATA[$this->getMax() !== null]]></code>
      <code><![CDATA[$this->getMin() !== null]]></code>
      <code><![CDATA[$this->getMin() !== null]]></code>
      <code>is_string($file)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/File/Crc32.php">
    <InvalidClassConstantType>
      <code>DOES_NOT_MATCH</code>
      <code>NOT_DETECTED</code>
      <code>NOT_FOUND</code>
    </InvalidClassConstantType>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[[
        'algorithm' => 'crc32',
        'hash'      => null,
    ]]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/File/ExcludeExtension.php">
    <InvalidClassConstantType>
      <code>FALSE_EXTENSION</code>
      <code>NOT_FOUND</code>
    </InvalidClassConstantType>
    <MixedArgument>
      <code>$ext</code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['filename']]]></code>
      <code><![CDATA[$fileInfo['filename']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$ext</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <NonInvariantDocblockPropertyType>
      <code>$messageTemplates</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($fileInfo['filename'], '.')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="src/File/ExcludeMimeType.php">
    <InvalidClassConstantType>
      <code>FALSE_TYPE</code>
      <code>NOT_DETECTED</code>
      <code>NOT_READABLE</code>
    </InvalidClassConstantType>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$this->type]]></code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code>ExcludeMimeType</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/File/Exists.php">
    <DocblockTypeContradiction>
      <code>is_array($directory)</code>
    </DocblockTypeContradiction>
    <InvalidIterator>
      <code>$directories</code>
    </InvalidIterator>
    <InvalidReturnStatement>
      <code>$directory</code>
    </InvalidReturnStatement>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$directories</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$dir</code>
      <code>$directory</code>
      <code>$directory</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string|null</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$directory</code>
      <code><![CDATA[$fileInfo['basename']]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$directory</code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$directories</code>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <RedundantCastGivenDocblockType>
      <code>(bool) $asArray</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/File/Extension.php">
    <MixedArgument>
      <code>$ext</code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['filename']]]></code>
      <code><![CDATA[$fileInfo['filename']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$extensions</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$case</code>
      <code>$case</code>
      <code>$ext</code>
      <code>$ext</code>
      <code><![CDATA[$options['case']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['allowNonExistentFile']]]></code>
      <code><![CDATA[$this->options['case']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($fileInfo['filename'], '.')]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>setAllowNonExistentFile</code>
      <code>setCase</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(bool) $case</code>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/File/FileInformationTrait.php">
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['filename']]]></code>
      <code><![CDATA[$fileInfo['filename']]]></code>
      <code><![CDATA[$fileInfo['filetype']]]></code>
      <code><![CDATA[$fileInfo['filetype']]]></code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code>$value</code>
    </PossiblyInvalidCast>
  </file>
  <file src="src/File/FilesSize.php">
    <DocblockTypeContradiction>
      <code>is_array($file)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
    </InvalidArgument>
    <InvalidClassConstantType>
      <code>TOO_BIG</code>
      <code>TOO_SMALL</code>
    </InvalidClassConstantType>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->toByteString($size)]]></code>
      <code><![CDATA[$this->toByteString($size)]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code>$file</code>
      <code>$files</code>
      <code>$files</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$file['name']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[$this->files[$files]]]></code>
      <code><![CDATA[$this->files[$files]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$files</code>
      <code>$files</code>
      <code><![CDATA[$options['max']]]></code>
      <code><![CDATA[$options['useByteString']]]></code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$max</code>
      <code>$min</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
    </PossiblyInvalidCast>
    <PossiblyUnusedReturnValue>
      <code>false</code>
    </PossiblyUnusedReturnValue>
    <PropertyNotSetInConstructor>
      <code>FilesSize</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code>$file !== null</code>
      <code>$max !== null</code>
      <code>$min !== null</code>
      <code>is_array($value)</code>
      <code>is_string($file)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/File/Hash.php">
    <DocblockTypeContradiction>
      <code>is_array($options)</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[[
        'algorithm' => 'crc32',
        'hash'      => null,
    ]]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code>$algorithm</code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MixedArrayAssignment>
      <code><![CDATA[$this->options['hash'][$value]]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$algorithm</code>
      <code>$algorithm</code>
      <code>$algorithm</code>
      <code><![CDATA[$options['algorithm']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['hash']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/File/ImageSize.php">
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$options['maxHeight']]]></code>
      <code><![CDATA[$options['maxWidth']]]></code>
      <code><![CDATA[$options['minHeight']]]></code>
      <code><![CDATA[$this->height]]></code>
      <code><![CDATA[$this->width]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>int</code>
      <code>int</code>
      <code>int</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['maxHeight']]]></code>
      <code><![CDATA[$this->options['maxWidth']]]></code>
      <code><![CDATA[$this->options['minHeight']]]></code>
      <code><![CDATA[$this->options['minWidth']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>setMaxHeight</code>
      <code>setMaxWidth</code>
      <code>setMinHeight</code>
      <code>setMinWidth</code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code>$height</code>
      <code>$width</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(int) $maxHeight</code>
      <code>(int) $maxWidth</code>
      <code>(int) $minHeight</code>
      <code>(int) $minWidth</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->getMaxHeight() !== null]]></code>
      <code><![CDATA[$this->getMaxHeight() !== null]]></code>
      <code><![CDATA[$this->getMaxWidth() !== null]]></code>
      <code><![CDATA[$this->getMaxWidth() !== null]]></code>
      <code><![CDATA[$this->getMinHeight() !== null]]></code>
      <code><![CDATA[$this->getMinWidth() !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/File/IsCompressed.php">
    <DocblockTypeContradiction>
      <code>$options === null</code>
    </DocblockTypeContradiction>
    <InvalidClassConstantType>
      <code>FALSE_TYPE</code>
      <code>NOT_DETECTED</code>
      <code>NOT_READABLE</code>
    </InvalidClassConstantType>
    <PropertyNotSetInConstructor>
      <code>IsCompressed</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/File/IsImage.php">
    <DocblockTypeContradiction>
      <code>$options === null</code>
    </DocblockTypeContradiction>
    <InvalidClassConstantType>
      <code>FALSE_TYPE</code>
      <code>NOT_DETECTED</code>
      <code>NOT_READABLE</code>
    </InvalidClassConstantType>
    <PropertyNotSetInConstructor>
      <code>IsImage</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/File/Md5.php">
    <InvalidClassConstantType>
      <code>DOES_NOT_MATCH</code>
      <code>NOT_DETECTED</code>
      <code>NOT_FOUND</code>
    </InvalidClassConstantType>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[[
        'algorithm' => 'md5',
        'hash'      => null,
    ]]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/File/MimeType.php">
    <DocblockTypeContradiction>
      <code>$file === false</code>
      <code>is_array($mimetype)</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement>
      <code><![CDATA[$this->options['magicFile']]]></code>
    </FalsableReturnStatement>
    <InvalidCatch>
      <code><![CDATA[try {
                    $this->setMagicFile($file);
                } catch (Exception\ExceptionInterface) {
                    // suppressing errors which are thrown due to open_basedir restrictions
                    continue;
                }]]></code>
    </InvalidCatch>
    <MixedArgument>
      <code>$file</code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code>$options[$key]</code>
      <code><![CDATA[$options['enableHeaderCheck']]]></code>
      <code><![CDATA[$options['magicFile']]]></code>
      <code><![CDATA[$options['mimeType']]]></code>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
      <code>static::FALSE_TYPE</code>
      <code>static::NOT_DETECTED</code>
      <code>static::NOT_READABLE</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$file</code>
      <code><![CDATA[$this->type]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>bool</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['disableMagicFile']]]></code>
      <code><![CDATA[$this->options['enableHeaderCheck']]]></code>
      <code><![CDATA[$this->options['magicFile']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <NoValue>
      <code><![CDATA[return $this->options['magicFile'];]]></code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code>$type</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $disable</code>
      <code>(bool) $headerCheck</code>
    </RedundantCastGivenDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[$this->options['magicFile'] !== null]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/File/NotExists.php">
    <InvalidIterator>
      <code>$directories</code>
    </InvalidIterator>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$directory</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$directory</code>
      <code><![CDATA[$fileInfo['basename']]]></code>
    </MixedOperand>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/File/Sha1.php">
    <InvalidClassConstantType>
      <code>DOES_NOT_MATCH</code>
      <code>NOT_DETECTED</code>
      <code>NOT_FOUND</code>
    </InvalidClassConstantType>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[[
        'algorithm' => 'sha1',
        'hash'      => null,
    ]]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/File/Size.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_string($max) && ! is_numeric($max)]]></code>
      <code><![CDATA[! is_string($min) && ! is_numeric($min)]]></code>
      <code>is_string($options)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$size</code>
      <code>$size</code>
    </InvalidArgument>
    <InvalidArrayOffset>
      <code>$sizes[$i]</code>
    </InvalidArrayOffset>
    <InvalidOperand>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </InvalidOperand>
    <InvalidPropertyAssignmentValue>
      <code>$size</code>
      <code>$size</code>
      <code>$size</code>
      <code><![CDATA[$this->toByteString($size)]]></code>
      <code><![CDATA[$this->toByteString($size)]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code>$max</code>
      <code>$min</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$max</code>
      <code>$min</code>
      <code><![CDATA[$options['max']]]></code>
      <code><![CDATA[$options['useByteString']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>int|string</code>
      <code>int|string</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$sizes[$i]</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$max</code>
      <code>$max</code>
      <code>$min</code>
      <code>$min</code>
      <code><![CDATA[$this->options['useByteString']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$max</code>
      <code>$max</code>
      <code>$min</code>
      <code>$min</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidArrayAssignment>
      <code><![CDATA[$options['max']]]></code>
      <code><![CDATA[$options['useByteString']]]></code>
    </PossiblyInvalidArrayAssignment>
    <PropertyNotSetInConstructor>
      <code>$size</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $byteString</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>$max !== null</code>
      <code>$max !== null</code>
      <code>$min !== null</code>
      <code>$min !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/File/Upload.php">
    <DocblockTypeContradiction>
      <code>null === $files</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code><![CDATA[$content['tmp_name']]]></code>
      <code>$file</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$content['error']]]></code>
      <code><![CDATA[$content['name']]]></code>
      <code><![CDATA[$content['tmp_name']]]></code>
      <code><![CDATA[$this->options['files'][$name]]]></code>
      <code><![CDATA[$this->options['files'][$name]]]></code>
      <code><![CDATA[$this->options['files'][$name]]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code>$return[$name]</code>
      <code>$return[$name]</code>
      <code><![CDATA[$this->options['files'][$name]]]></code>
      <code><![CDATA[$this->options['files'][$name]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$error</code>
      <code>$name</code>
      <code>$return[$file]</code>
      <code>$return[$name]</code>
      <code>$return[$name]</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['files']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument>
      <code>$file</code>
    </PossiblyNullArgument>
    <RedundantConditionGivenDocblockType>
      <code>$file !== null</code>
      <code><![CDATA[(is_countable($files))
                && count($files) === 0]]></code>
      <code>is_countable($files)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull>
      <code><![CDATA[$this->options['files'] === null]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/File/UploadFile.php">
    <MixedArgument>
      <code><![CDATA[$value['error']]]></code>
      <code><![CDATA[$value['name']]]></code>
      <code><![CDATA[$value['tmp_name']]]></code>
    </MixedArgument>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <RedundantConditionGivenDocblockType>
      <code>is_string($value)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/File/WordCount.php">
    <DocblockTypeContradiction>
      <code>is_string($options)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$fileInfo['file']]]></code>
      <code><![CDATA[$fileInfo['file']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$max</code>
      <code>$min</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>int</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['max']]]></code>
      <code><![CDATA[$this->options['min']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PropertyNotSetInConstructor>
      <code>$count</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->getMax() !== null]]></code>
      <code><![CDATA[$this->getMax() !== null]]></code>
      <code><![CDATA[$this->getMin() !== null]]></code>
      <code><![CDATA[$this->getMin() !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/GpsPoint.php">
    <DocblockTypeContradiction>
      <code>$value === false || $value === null</code>
      <code>$value === null</code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code>$matches[1][0]</code>
      <code>$matches[2][0]</code>
    </InvalidOperand>
    <MixedArgument>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="src/GreaterThan.php">
    <MixedArgument>
      <code><![CDATA[$options['inclusive']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$temp['inclusive']]]></code>
      <code><![CDATA[$temp['min']]]></code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor>
      <code>$inclusive</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Hex.php">
    <DocblockTypeContradiction>
      <code>! is_string($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Hostname.php">
    <DocblockTypeContradiction>
      <code>is_array($options)</code>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$regexChar</code>
      <code>$regexKey</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$partRegexChars</code>
      <code>$regexChar</code>
      <code>$regexChars</code>
      <code>$regexKey</code>
      <code><![CDATA[$temp['allow']]]></code>
      <code><![CDATA[$temp['ipValidator']]]></code>
      <code><![CDATA[$temp['useIdnCheck']]]></code>
      <code><![CDATA[$temp['useTldCheck']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>Ip</code>
      <code>bool</code>
      <code>bool</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$regexChars</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['allow']]]></code>
      <code><![CDATA[$this->options['ipValidator']]]></code>
      <code><![CDATA[$this->options['useIdnCheck']]]></code>
      <code><![CDATA[$this->options['useTldCheck']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedMethod>
      <code>setAllow</code>
      <code>setIpValidator</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(bool) $useIdnCheck</code>
      <code>(bool) $useTldCheck</code>
    </RedundantCastGivenDocblockType>
    <UnresolvableInclude>
      <code><![CDATA[include __DIR__ . '/' . $this->validIdns[$this->tld]]]></code>
    </UnresolvableInclude>
  </file>
  <file src="src/Iban.php">
    <DocblockTypeContradiction>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$options['allow_non_sepa']]]></code>
      <code><![CDATA[$options['country_code']]]></code>
    </MixedArgument>
    <MixedOperand>
      <code>static::$ibanRegex[$countryCode]</code>
    </MixedOperand>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <RedundantCastGivenDocblockType>
      <code>(bool) $allowNonSepa</code>
      <code>(string) $countryCode</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Identical.php">
    <MixedArgument>
      <code><![CDATA[$token['literal']]]></code>
      <code><![CDATA[$token['strict']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$context[$key]</code>
      <code>$context[$token]</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$context</code>
      <code><![CDATA[$this->token]]></code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code>is_array($token) ? $token : null</code>
    </PossiblyInvalidArgument>
    <RedundantCastGivenDocblockType>
      <code>(bool) $literal</code>
      <code>(bool) $strict</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/InArray.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$this->haystack === null]]></code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code>$haystack</code>
      <code>$haystack</code>
      <code>$haystack</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$el</code>
      <code>$element</code>
      <code>$h</code>
      <code>$haystack</code>
      <code><![CDATA[$this->haystack]]></code>
    </MixedAssignment>
    <PropertyNotSetInConstructor>
      <code>$haystack</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $recursive</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Ip.php">
    <LessSpecificImplementedReturnType>
      <code>AbstractValidator</code>
    </LessSpecificImplementedReturnType>
    <MixedArgument>
      <code>$regex</code>
      <code>$regex</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/IsCountable.php">
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUnusedReturnValue>
      <code>$this</code>
    </PossiblyUnusedReturnValue>
    <UnusedMethod>
      <code>setCount</code>
      <code>setMax</code>
      <code>setMin</code>
    </UnusedMethod>
  </file>
  <file src="src/IsInstanceOf.php">
    <MixedAssignment>
      <code><![CDATA[$tmpOptions['className']]]></code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>setClassName</code>
    </PossiblyUnusedMethod>
    <PropertyNotSetInConstructor>
      <code>$className</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/IsJsonString.php">
    <InvalidArgument>
      <code><![CDATA[$this->maxDepth]]></code>
    </InvalidArgument>
  </file>
  <file src="src/Isbn.php">
    <DocblockTypeContradiction>
      <code>! is_string($value)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$this->getValue()]]></code>
      <code><![CDATA[$this->getValue()]]></code>
      <code><![CDATA[$this->getValue()]]></code>
    </MixedArgument>
    <MixedInferredReturnType>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['separator']]]></code>
      <code><![CDATA[$this->options['type']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/LessThan.php">
    <MixedArgument>
      <code><![CDATA[$options['inclusive']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$temp['inclusive']]]></code>
      <code><![CDATA[$temp['max']]]></code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor>
      <code>$inclusive</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Module.php">
    <PossiblyUnusedParam>
      <code>$moduleManager</code>
    </PossiblyUnusedParam>
    <UndefinedDocblockClass>
      <code>ModuleManager</code>
    </UndefinedDocblockClass>
    <UnusedClass>
      <code>Module</code>
    </UnusedClass>
  </file>
  <file src="src/NotEmpty.php">
    <MixedAssignment>
      <code><![CDATA[$temp['type']]]></code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['type']]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$type</code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code><![CDATA[is_object($value) && method_exists($value, '__toString')]]></code>
    </RedundantCondition>
  </file>
  <file src="src/Regex.php">
    <DocblockTypeContradiction>
      <code>! is_string($value)</code>
      <code>is_array($pattern)</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$pattern['pattern']]]></code>
      <code>$value</code>
    </MixedArgument>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$pattern</code>
    </PossiblyInvalidArgument>
    <RedundantCastGivenDocblockType>
      <code>(string) $pattern</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Sitemap/Changefreq.php">
    <DocblockTypeContradiction>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Sitemap/Lastmod.php">
    <DocblockTypeContradiction>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Sitemap/Loc.php">
    <DocblockTypeContradiction>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Sitemap/Priority.php">
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/StaticValidator.php">
    <RedundantCondition>
      <code><![CDATA[method_exists($plugins, 'configure')]]></code>
    </RedundantCondition>
    <UndefinedMethod>
      <code>setShareByDefault</code>
    </UndefinedMethod>
  </file>
  <file src="src/Step.php">
    <DocblockTypeContradiction>
      <code>$options instanceof Traversable</code>
      <code>is_array($options)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$float</code>
      <code>$value</code>
    </InvalidArgument>
    <InvalidScalarArgument>
      <code>$float</code>
    </InvalidScalarArgument>
    <MixedArgument>
      <code>$options</code>
      <code><![CDATA[$this->baseValue]]></code>
      <code><![CDATA[$this->step]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$temp['baseValue']]]></code>
      <code><![CDATA[$temp['step']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->baseValue]]></code>
      <code><![CDATA[$this->step]]></code>
    </MixedReturnStatement>
    <PossiblyFalseOperand>
      <code><![CDATA[strpos($float, '.')]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="src/StringLength.php">
    <DocblockTypeContradiction>
      <code>is_string($value)</code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code><![CDATA[$temp['encoding']]]></code>
      <code><![CDATA[$temp['max']]]></code>
      <code><![CDATA[$temp['min']]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>int</code>
      <code>int</code>
      <code>int|null</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['encoding']]]></code>
      <code><![CDATA[$this->options['length']]]></code>
      <code><![CDATA[$this->options['max']]]></code>
      <code><![CDATA[$this->options['min']]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseArgument>
      <code><![CDATA[$this->getStringWrapper()->strlen($value)]]></code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedMethod>
      <code>setStringWrapper</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(int) $length</code>
      <code>(int) $max</code>
      <code>(int) $min</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Timezone.php">
    <DocblockTypeContradiction>
      <code>is_string($type)</code>
    </DocblockTypeContradiction>
    <InvalidOperand>
      <code><![CDATA[array_search($value, $this->constants)]]></code>
    </InvalidOperand>
    <MixedArgument>
      <code>is_string($type) || is_int($type)
                    ? $type : gettype($type)</code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$opts['type']]]></code>
      <code>$type</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
      <code>$type</code>
    </MixedOperand>
    <PossiblyFalseOperand>
      <code><![CDATA[array_search($value, $this->constants)]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidArgument>
      <code>$opts</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$type</code>
      <code>$value</code>
      <code>$value</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedVariable>
      <code>$opts</code>
    </PossiblyUndefinedVariable>
    <RedundantConditionGivenDocblockType>
      <code>gettype($type)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Translator/TranslatorAwareInterface.php">
    <PossiblyUnusedReturnValue>
      <code>TranslatorAwareInterface</code>
      <code>self</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/UndisclosedPassword.php">
    <UndefinedAttributeClass>
      <code>SensitiveParameter</code>
      <code>SensitiveParameter</code>
      <code>SensitiveParameter</code>
      <code>SensitiveParameter</code>
      <code>SensitiveParameter</code>
      <code>SensitiveParameter</code>
      <code>SensitiveParameter</code>
    </UndefinedAttributeClass>
  </file>
  <file src="src/Uri.php">
    <DocblockTypeContradiction>
      <code>is_array($options)</code>
      <code><![CDATA[is_string($this->uriHandler)]]></code>
      <code>is_string($value)</code>
      <code><![CDATA[null === $this->uriHandler]]></code>
    </DocblockTypeContradiction>
    <InvalidCatch>
      <code><![CDATA[try {
            $uriHandler->parse($value);
            if ($uriHandler->isValid()) {
                // It will either be a valid absolute or relative URI
                if (
                    ($this->allowRelative && $this->allowAbsolute)
                    || ($this->allowAbsolute && $uriHandler->isAbsolute())
                    || ($this->allowRelative && $uriHandler->isValidRelative())
                ) {
                    return true;
                }
            }
        } catch (UriException) {
            // Error parsing URI, it must be invalid
        }]]></code>
    </InvalidCatch>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->uriHandler]]></code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$options['allowAbsolute']]]></code>
      <code><![CDATA[$options['allowRelative']]]></code>
      <code><![CDATA[$options['uriHandler']]]></code>
      <code><![CDATA[$this->uriHandler]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$temp['allowAbsolute']]]></code>
      <code><![CDATA[$temp['allowRelative']]]></code>
      <code><![CDATA[$temp['uriHandler']]]></code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[new $this->uriHandler()]]></code>
    </MixedMethodCall>
    <MoreSpecificImplementedParamType>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>UriHandler</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>$uriHandler</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyUndefinedVariable>
      <code>$temp</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor>
      <code>$uriHandler</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code><![CDATA[new $this->uriHandler()]]></code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(bool) $allowAbsolute</code>
      <code>(bool) $allowRelative</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/ValidatorChain.php">
    <MixedPropertyTypeCoercion>
      <code>new PriorityQueue()</code>
    </MixedPropertyTypeCoercion>
    <PossiblyUnusedMethod>
      <code>addByName</code>
      <code>addValidator</code>
      <code>count</code>
    </PossiblyUnusedMethod>
    <TooManyArguments>
      <code>isValid</code>
    </TooManyArguments>
  </file>
  <file src="src/ValidatorPluginManager.php">
    <DeprecatedMethod>
      <code>getServiceLocator</code>
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MethodSignatureMismatch>
      <code>ValidatorPluginManager</code>
    </MethodSignatureMismatch>
    <MissingParamType>
      <code>$configOrContainerInstance</code>
    </MissingParamType>
    <MixedArgument>
      <code>$configOrContainerInstance</code>
      <code><![CDATA[$container->get('MvcTranslator')]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code>get</code>
      <code>has</code>
    </MixedMethodCall>
    <NonInvariantDocblockPropertyType>
      <code>$instanceOf</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUnusedMethod>
      <code>validatePlugin</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code>$shareByDefault</code>
    </PossiblyUnusedProperty>
    <RedundantCondition>
      <code><![CDATA[$container === $this && method_exists($container, 'getServiceLocator')]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>$container</code>
      <code><![CDATA[$container->getServiceLocator()]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/ValidatorPluginManagerAwareInterface.php">
    <MissingReturnType>
      <code>setValidatorPluginManager</code>
    </MissingReturnType>
  </file>
  <file src="src/ValidatorPluginManagerFactory.php">
    <DeprecatedClass>
      <code><![CDATA[new Config($config['validators'])]]></code>
    </DeprecatedClass>
    <DeprecatedInterface>
      <code>ValidatorPluginManagerFactory</code>
    </DeprecatedInterface>
    <MixedArgument>
      <code><![CDATA[$config['validators']]]></code>
    </MixedArgument>
    <ParamNameMismatch>
      <code>$container</code>
    </ParamNameMismatch>
  </file>
  <file src="src/ValidatorProviderInterface.php">
    <UnusedClass>
      <code>ValidatorProviderInterface</code>
    </UnusedClass>
  </file>
  <file src="test/AbstractValidatorTest.php">
    <InvalidArgument>
      <code>$options</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$message</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$message</code>
    </MixedAssignment>
    <NullArgument>
      <code>null</code>
      <code>null</code>
    </NullArgument>
    <PossiblyUnusedMethod>
      <code>invalidOptionsArguments</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/BarcodeTest.php">
    <ArgumentTypeCoercion>
      <code>$expectedInstance</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>123</code>
      <code>123</code>
      <code>06510000.4327</code>
      <code>106510000.4327</code>
      <code><![CDATA[['065100004327']]]></code>
      <code><![CDATA[['065100004327']]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[['065100004327']]]></code>
      <code><![CDATA[['065100004327']]]></code>
    </InvalidCast>
    <PossiblyUnusedMethod>
      <code>provideBarcodeConstructor</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/BetweenTest.php">
    <InvalidArgument>
      <code>1</code>
    </InvalidArgument>
    <MixedOperand>
      <code>$value</code>
    </MixedOperand>
    <PossiblyInvalidArgument>
      <code>$args</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>constructBetweenValidatorInvalidDataProvider</code>
      <code>providerBasic</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/BitwiseTest.php">
    <InvalidArgument>
      <code>$control</code>
      <code>$control</code>
      <code>0x1</code>
      <code>0x1</code>
      <code>0x1</code>
      <code>0x1</code>
      <code>0x1</code>
    </InvalidArgument>
    <PossiblyUnusedMethod>
      <code>bitwiseXorProvider</code>
      <code>constructDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/BusinessIdentifierCodeTest.php">
    <PossiblyUnusedMethod>
      <code>notAStringProvider</code>
      <code>notBicFormatProvider</code>
      <code>notSwiftCountryCodeProvider</code>
      <code>successProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/CallbackTest.php">
    <MissingClosureParamType>
      <code>$baz</code>
      <code>$c</code>
      <code>$c</code>
      <code>$v</code>
      <code>$v</code>
    </MissingClosureParamType>
    <MixedArrayAssignment>
      <code><![CDATA[$options['callback']]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$options</code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code>optionsCallback</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/CreditCardTest.php">
    <InvalidArgument>
      <code><![CDATA[['something']]]></code>
      <code><![CDATA[[self::class, 'nocallback']]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[['something']]]></code>
    </InvalidCast>
    <PossiblyUnusedMethod>
      <code>basicValues</code>
      <code>jcbValues</code>
      <code>mastercardValues</code>
      <code>mirValues</code>
      <code>optionsValues</code>
      <code>serviceValues</code>
      <code>visaValues</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code>false</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="test/CsrfTest.php">
    <InvalidArgument>
      <code>[]</code>
    </InvalidArgument>
    <InvalidCast>
      <code>[]</code>
    </InvalidCast>
    <MixedArgument>
      <code>$bareToken</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$bareToken</code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code>$timeout</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$_SERVER['REQUEST_TIME']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedMethod>
      <code>fakeValuesDataProvider</code>
      <code>timeoutValuesDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/DateStepTest.php">
    <PossiblyUnusedMethod>
      <code>moscowWinterTimeDataProvider</code>
      <code>stepTestsDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/DateTest.php">
    <PossiblyUnusedMethod>
      <code>datesDataProvider</code>
    </PossiblyUnusedMethod>
    <UnusedParam>
      <code>$result</code>
    </UnusedParam>
  </file>
  <file src="test/Db/NoRecordExistsTest.php">
    <DeprecatedMethod>
      <code>addMethods</code>
      <code>addMethods</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
    </InvalidArgument>
    <MissingTemplateParam>
      <code>class extends ArrayObject {</code>
    </MissingTemplateParam>
  </file>
  <file src="test/Db/RecordExistsTest.php">
    <DeprecatedMethod>
      <code>addMethods</code>
      <code>addMethods</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
      <code><![CDATA['users']]></code>
    </InvalidArgument>
    <MissingTemplateParam>
      <code>class extends ArrayObject {</code>
    </MissingTemplateParam>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$parameters['where1']]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference>
      <code>$parameters</code>
    </PossiblyNullReference>
  </file>
  <file src="test/Db/TestAsset/ConcreteDbValidator.php">
    <PropertyNotSetInConstructor>
      <code>ConcreteDbValidator</code>
      <code>ConcreteDbValidator</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/DigitsTest.php">
    <InvalidArgument>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidCast>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/EmailAddressTest.php">
    <InvalidArgument>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_DNS | Hostname::ALLOW_IP</code>
      <code><![CDATA[[$this, 'errorHandler']]]></code>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidCast>
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyUnusedMethod>
      <code>emailAddressesForMxChecks</code>
      <code>errorHandler</code>
      <code>invalidEmailAddresses</code>
      <code>validEmailAddresses</code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code>assertIsArray</code>
    </RedundantConditionGivenDocblockType>
    <UnusedParam>
      <code>$errno</code>
      <code>$errstr</code>
    </UnusedParam>
    <UnusedPsalmSuppress>
      <code>TooManyArguments</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="test/ExplodeTest.php">
    <InvalidArgument>
      <code><![CDATA['inarray']]></code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code>$c</code>
      <code>$v</code>
    </MissingClosureParamType>
    <PossiblyUnusedMethod>
      <code>getExpectedData</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/CountTest.php">
    <MixedArgument>
      <code>$max</code>
      <code>$min</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
      <code>invalidMinMaxValues</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/Crc32Test.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/ExcludeExtensionTest.php">
    <InvalidReturnStatement>
      <code>$testData</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array<array-key, array{
     *     0: string|string[],
     *     1: string|array{
     *         tmp_name: string,
     *         name: string,
     *         size: int,
     *         error: int,
     *         type: string
     *     },
     *     2: bool,
     *     3: string
     * }>]]></code>
    </InvalidReturnType>
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getExtensionProvider</code>
      <code>setExtensionProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/ExcludeMimeTypeTest.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getMimeTypeProvider</code>
      <code>setMimeTypeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/ExistsTest.php">
    <ArgumentTypeCoercion>
      <code>$value</code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code>$value</code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getDirectoryProvider</code>
      <code>invalidDirectoryArguments</code>
      <code>setDirectoryProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/ExtensionTest.php">
    <InvalidReturnStatement>
      <code>$testData</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array<array-key, array{
     *     0: string|string[],
     *     1: string|array{
     *         tmp_name: string,
     *         name: string,
     *         size: int,
     *         error: int,
     *         type: string
     *     },
     *     2: bool,
     *     3: string
     * }>]]></code>
    </InvalidReturnType>
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getExtensionProvider</code>
      <code>setExtensionProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/FilesSizeTest.php">
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedProperty>
      <code>$multipleOptionsDetected</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="test/File/HashTest.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
      <code>$value</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$options['algorithm']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$options</code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>hashProvider</code>
      <code>invalidHashTypes</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/ImageSizeTest.php">
    <InvalidArgument>
      <code>$minWidth</code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>imageMaxProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/IsCompressedTest.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$options</code>
      <code>$options</code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getMimeTypeProvider</code>
      <code>setMimeTypeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/IsImageTest.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$options</code>
      <code>$options</code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getMimeTypeProvider</code>
      <code>setMimeTypeProvider</code>
    </PossiblyUnusedMethod>
    <RedundantCondition>
      <code>is_array($isValidParam)</code>
    </RedundantCondition>
  </file>
  <file src="test/File/Md5Test.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/MimeTypeTest.php">
    <ArgumentTypeCoercion>
      <code>$type</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>[]</code>
    </InvalidArgument>
    <InvalidCast>
      <code>[]</code>
    </InvalidCast>
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$options['magicFile']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$options</code>
    </MixedAssignment>
    <PossiblyNullArgument>
      <code>$type</code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getMimeTypeProvider</code>
      <code>invalidMimeTypeTypes</code>
      <code>setMimeTypeProvider</code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code>is_array($isValidParam)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/File/NotExistsTest.php">
    <ArgumentTypeCoercion>
      <code>$value</code>
    </ArgumentTypeCoercion>
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <PossiblyNullArgument>
      <code>$value</code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getDirectoryProvider</code>
      <code>invalidDirectoryArguments</code>
      <code>setDirectoryProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/Sha1Test.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$isValidParam</code>
    </MixedArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>getHashProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/SizeTest.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>invalidMinMaxValues</code>
      <code>setMaxProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/UploadFileTest.php">
    <PossiblyUnusedMethod>
      <code>uploadErrorsTestDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/UploadTest.php">
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyUnusedMethod>
      <code>invalidPsr7UploadedFiles</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/File/WordCountTest.php">
    <MixedArgument>
      <code><![CDATA[$isValidParam['tmp_name']]]></code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicBehaviorDataProvider</code>
      <code>invalidMinMaxValues</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/GPSPointTest.php">
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
      <code>boundariesProvider</code>
      <code>errorMessageTestValues</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/GreaterThanTest.php">
    <InvalidArgument>
      <code>1</code>
      <code>1</code>
      <code>10</code>
      <code>10</code>
      <code>10</code>
      <code>10</code>
      <code>10</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
      <code>correctInclusiveMessageDataProvider</code>
      <code>correctNotInclusiveMessageDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/HexTest.php">
    <InvalidArgument>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidCast>
    <PossiblyInvalidArgument>
      <code>$input</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/HostnameTest.php">
    <InvalidArgument>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_ALL</code>
      <code>Hostname::ALLOW_DNS</code>
      <code>Hostname::ALLOW_DNS</code>
      <code>Hostname::ALLOW_DNS</code>
      <code>Hostname::ALLOW_URI</code>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidCast>
    <MixedArrayOffset>
      <code>$translations[$code]</code>
    </MixedArrayOffset>
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyUndefinedVariable>
      <code>$code</code>
      <code>$message</code>
    </PossiblyUndefinedVariable>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
      <code>combinationDataProvider</code>
      <code>dashesDataProvider</code>
      <code>differentIconvEncodingDataProvider</code>
      <code>domainsWithUnderscores</code>
      <code>idnMatchingDataProvider</code>
      <code>idnNoMatchingDataProvider</code>
      <code>idnilDataProvider</code>
      <code>idnsiProvider</code>
      <code>invalidLatinSpecialCharsProvider</code>
      <code>invalidTLDHostnames</code>
      <code>numberNamesDataProvider</code>
      <code>punyCodeDecodingDataProvider</code>
      <code>tldMatchingDataProvider</code>
      <code>tldNoMatchingDataProvider</code>
      <code>trailingDotDataProvider</code>
      <code>uriDataProvider</code>
      <code>validTLDHostnames</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/IbanTest.php">
    <PossiblyUnusedMethod>
      <code>ibanDataProvider</code>
      <code>invalidValues</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/IdenticalTest.php">
    <MixedArgument>
      <code>$context</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>invalidContextProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/InArrayTest.php">
    <PossiblyUnusedMethod>
      <code>nonStrictValidationSet</code>
      <code>strictValidationSet</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/IpTest.php">
    <PossiblyUnusedMethod>
      <code>iPvFutureAddressesProvider</code>
      <code>invalidIpV4Addresses</code>
      <code>ipvFutureProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/IsCountableTest.php">
    <InvalidArgument>
      <code>new stdClass()</code>
    </InvalidArgument>
    <PossiblyInvalidArgument>
      <code>$options</code>
      <code>$originalOptions</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedMethod>
      <code>conflictingOptionsProvider</code>
      <code>conflictingSecondaryOptionsProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/IsInstanceOfTest.php">
    <InvalidArgument>
      <code>DateTime::class</code>
      <code>DateTime::class</code>
      <code>DateTime::class</code>
      <code>DateTime::class</code>
      <code>DateTime::class</code>
      <code>Exception::class</code>
      <code>TestCase::class</code>
    </InvalidArgument>
  </file>
  <file src="test/IsJsonStringTest.php">
    <PossiblyUnusedMethod>
      <code>allowProvider</code>
      <code>invalidStringProvider</code>
      <code>pluginManagerNameProvider</code>
      <code>provideThingsThatAreNotStrings</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/IsbnTest.php">
    <InvalidArgument>
      <code>(float) 1.2345</code>
      <code><![CDATA[(object) 'Test']]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[(object) 'Test']]></code>
    </InvalidCast>
    <PossiblyUnusedMethod>
      <code>basicProvider</code>
    </PossiblyUnusedMethod>
    <RedundantCast>
      <code>(float) 1.2345</code>
    </RedundantCast>
  </file>
  <file src="test/LessThanTest.php">
    <InvalidArgument>
      <code>10</code>
      <code>10</code>
      <code>10</code>
      <code>10</code>
      <code>10</code>
      <code>10</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/MessageTest.php">
    <InaccessibleProperty>
      <code><![CDATA[$this->validator->value]]></code>
    </InaccessibleProperty>
    <RedundantConditionGivenDocblockType>
      <code>assertIsArray</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedMagicPropertyFetch>
      <code><![CDATA[$this->validator->max]]></code>
      <code><![CDATA[$this->validator->min]]></code>
      <code><![CDATA[$this->validator->unknownProperty]]></code>
    </UndefinedMagicPropertyFetch>
  </file>
  <file src="test/NotEmptyTest.php">
    <InvalidArgument>
      <code>$type</code>
      <code><![CDATA['boolean']]></code>
      <code><![CDATA['boolean']]></code>
      <code>true</code>
    </InvalidArgument>
    <PossiblyUnusedMethod>
      <code>arrayConfigNotationProvider</code>
      <code>arrayConfigNotationWithoutKeyProvider</code>
      <code>arrayConstantNotationProvider</code>
      <code>arrayOnlyProvider</code>
      <code>basicProvider</code>
      <code>booleanProvider</code>
      <code>configObjectProvider</code>
      <code>constructorWithTypeArrayProvider</code>
      <code>duplicateStringSettingProvider</code>
      <code>floatOnlyProvider</code>
      <code>integerOnlyProvider</code>
      <code>multiConstantNotationProvider</code>
      <code>nullOnlyProvider</code>
      <code>onlyAllProvider</code>
      <code>phpOnlyProvider</code>
      <code>singleStringNotationProvider</code>
      <code>spaceOnlyProvider</code>
      <code>stringNotationProvider</code>
      <code>stringOnlyProvider</code>
      <code>zeroOnlyProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/RegexTest.php">
    <InvalidArgument>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidCast>
    <MixedArgument>
      <code>$options</code>
      <code>$options</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
      <code>invalidConstructorArgumentsProvider</code>
      <code>specialCharValidationProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Sitemap/ChangefreqTest.php">
    <InvalidArgument>
      <code>$value</code>
    </InvalidArgument>
    <PossiblyInvalidCast>
      <code>$value</code>
    </PossiblyInvalidCast>
  </file>
  <file src="test/Sitemap/LastmodTest.php">
    <InvalidArgument>
      <code>$value</code>
    </InvalidArgument>
    <PossiblyInvalidCast>
      <code>$value</code>
    </PossiblyInvalidCast>
  </file>
  <file src="test/Sitemap/LocTest.php">
    <InvalidArgument>
      <code>$value</code>
    </InvalidArgument>
    <PossiblyInvalidCast>
      <code>$value</code>
    </PossiblyInvalidCast>
    <PossiblyUnusedMethod>
      <code>invalidLocs</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Sitemap/PriorityTest.php">
    <PossiblyInvalidArgument>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$value</code>
    </PossiblyInvalidCast>
  </file>
  <file src="test/StaticValidatorTest.php">
    <InvalidArgument>
      <code>1</code>
    </InvalidArgument>
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyUnusedMethod>
      <code>invalidParameterizedData</code>
      <code>parameterizedData</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/StepTest.php">
    <InvalidArgument>
      <code>$baseValue</code>
    </InvalidArgument>
    <PossiblyUnusedMethod>
      <code>decimalHundredthStepValues</code>
      <code>decimalStepSubstractionBugValues</code>
      <code>decimalStepValues</code>
      <code>decimalValues</code>
      <code>valuesToValidate</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/StringLengthTest.php">
    <InvalidArgument>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidArgument>
    <InvalidCast>
      <code><![CDATA[[1 => 1]]]></code>
    </InvalidCast>
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>basicDataProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/TimezoneTest.php">
    <InvalidArgument>
      <code><![CDATA['abbreviation']]></code>
      <code><![CDATA['abbreviation']]></code>
      <code><![CDATA['location']]></code>
      <code><![CDATA['location']]></code>
    </InvalidArgument>
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>abbreviationProvider</code>
      <code>getInvalidTypes</code>
      <code>locationAndAbbreviationProvider</code>
      <code>locationProvider</code>
      <code>wrongTypesProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/UndisclosedPasswordTest.php">
    <PossiblyUnusedMethod>
      <code>goodPasswordProvider</code>
      <code>seenPasswordProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/UriTest.php">
    <InvalidArgument>
      <code>$uriMock</code>
      <code>new stdClass()</code>
      <code>new stdClass()</code>
      <code>stdClass::class</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>allowOptionsDataProvider</code>
      <code>invalidValueTypes</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/UuidTest.php">
    <PossiblyUnusedMethod>
      <code>invalidUuidProvider</code>
      <code>validUuidProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/ValidatorChainTest.php">
    <InvalidArgument>
      <code>1</code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <PossiblyUnusedMethod>
      <code>breakChainFlags</code>
      <code>handleNotFoundError</code>
    </PossiblyUnusedMethod>
    <UndefinedThisPropertyAssignment>
      <code><![CDATA[$this->error]]></code>
    </UndefinedThisPropertyAssignment>
    <UnusedClosureParam>
      <code>$value</code>
      <code>$value</code>
    </UnusedClosureParam>
    <UnusedParam>
      <code>$errnum</code>
    </UnusedParam>
  </file>
  <file src="test/_files/MyBarcode1.php">
    <UndefinedFunction>
      <code><![CDATA['invalid']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>MyBarcode1</code>
    </UnusedClass>
  </file>
  <file src="test/_files/MyBarcode2.php">
    <UndefinedFunction>
      <code><![CDATA['_mod10']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>MyBarcode2</code>
    </UnusedClass>
  </file>
  <file src="test/_files/MyBarcode3.php">
    <UndefinedFunction>
      <code><![CDATA['_mod10']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>MyBarcode3</code>
    </UnusedClass>
  </file>
  <file src="test/_files/MyBarcode4.php">
    <InvalidArgument>
      <code><![CDATA['odd']]></code>
    </InvalidArgument>
    <UndefinedFunction>
      <code><![CDATA['_mod10']]></code>
    </UndefinedFunction>
    <UnusedClass>
      <code>MyBarcode4</code>
    </UnusedClass>
  </file>
  <file src="test/_files/MyBarcode5.php">
    <UnusedClass>
      <code>MyBarcode5</code>
    </UnusedClass>
  </file>
</files>
